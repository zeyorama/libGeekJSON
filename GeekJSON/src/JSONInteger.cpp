#include "JSONInteger.hpp"

#include <cstdio>
#include <cstring>

using namespace std;

namespace GeekJSON
{

  /* ************************************************** */
  /* ************************************************** */
  /* **************** CON-/DESTRUCTORS  *************** */
  /* ************************************************** */
  /* ************************************************** */
  JSONInteger::JSONInteger( const int& Value ) :
    JSONValue(),
    m_Value( Value ) { return; }

  JSONInteger::~JSONInteger( void ) { return; }

/* ************************************************** */
/* ************************************************** */
/* ********************* PUBLIC  ******************** */
/* ************************************************** */
/* ************************************************** */
  void
  JSONInteger::Set( const int& Value )
  {
    m_Value = Value;
  }

  const int&
  JSONInteger::Get( void ) const
  {
    return m_Value;
  }

  string
  JSONInteger::Generate( const unsigned int )
  {
    char integer[ 12 ];

    memset( integer, '\0', sizeof( char ) * 12 );

    sprintf( integer, "%i", m_Value );

    return integer;
  }

/* ************************************************** */
/* ************************************************** */
/* *******************  PROTECTED ******************* */
/* ************************************************** */
/* ************************************************** */

/* ************************************************** */
/* ************************************************** */
/* ********************* PRIVATE ******************** */
/* ************************************************** */
/* ************************************************** */

} /* namespace GeekJSON */
