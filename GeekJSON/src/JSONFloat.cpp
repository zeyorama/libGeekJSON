#include "JSONFloat.hpp"

#include <cstdio>
#include <cstring>

using namespace std;

namespace GeekJSON
{

  /* ************************************************** */
  /* ************************************************** */
  /* **************** CON-/DESTRUCTORS  *************** */
  /* ************************************************** */
  /* ************************************************** */
  JSONFloat::JSONFloat( const float& Value ) :
    JSONValue(),
    m_Value( Value ) { return; }

  JSONFloat::~JSONFloat( void ) { return; }

/* ************************************************** */
/* ************************************************** */
/* ********************* PUBLIC  ******************** */
/* ************************************************** */
/* ************************************************** */
  void
  JSONFloat::Set( const float& Value )
  {
    m_Value = Value;
  }

  const float&
  JSONFloat::Get( void ) const
  {
    return m_Value;
  }

  string
  JSONFloat::Generate( const unsigned int )
  {
    char floatingpoint[ 64 ];

    memset( floatingpoint, '\0', sizeof( char ) * 64 );

    sprintf( floatingpoint, "%f", m_Value );

    return floatingpoint;
  }

/* ************************************************** */
/* ************************************************** */
/* *******************  PROTECTED ******************* */
/* ************************************************** */
/* ************************************************** */

/* ************************************************** */
/* ************************************************** */
/* ********************* PRIVATE ******************** */
/* ************************************************** */
/* ************************************************** */

} /* namespace GeekJSON */
